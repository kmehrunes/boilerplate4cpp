#!/bin/bash

src_dir="$PWD/src"
test_dir="$PWD/src/tests"
test_bin="$PWD/bin/tests"
include_dir="$PWD/includes/"
libs_dir="" #put the paths where the shared libraries you need to link agains reside
cpp_version="14" 
linker_opts="" # e.g. -lpthread -lboost_syst ..etc
catch_precompiled="$test_dir/tests-main.o"
compiler_opts="-std=c++$cpp_version -Wl,-rpath=$libs_dir -L$libs_dir $linker_opts"

if [ ! -f $catch_precompiled ]; then
	echo "Needs to precompile catch first"
	g++ -std=c++14 tests-main.cpp -c
fi

tests=() ## put the tests cpp files here
sources=() ## put the corresponding source cpp files here (must be the same size as tests). If you need multiple source files for a single test file then just put them in the same string but separate them with a space
executables=() ## put the names of the executables here (must be the same size as tests)

num_tests=${#tests[@]}
max_index=$(( $num_tests - 1 ))

for index in $(seq 0 $max_index); do
	echo "running test ${tests[$index]}"
	test_file=${tests[$index]}
	src_files=${sources[$index]}
	augemented_src_files="" # will hold the source files with the source directory prepended to them
	exec_file=${executables[$index]}
	
	for file in $src_files; do
		augemented_src_files="$augemented_src_files $src_dir/$file"
	done
	
	g++ $compiler_opts -I$include_dir $catch_precompiled $augemented_src_files \
		$test_dir/$test_file -o $test_bin/$exec_file && $test_bin/$exec_file "$@"
done
